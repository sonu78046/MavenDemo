<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="10" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="18983" started-at="2020-04-20T11:57:20Z" finished-at="2020-04-20T11:57:39Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="18983" started-at="2020-04-20T11:57:20Z" finished-at="2020-04-20T11:57:39Z">
      <class name="Automation.soap2Test">
        <test-method status="PASS" signature="server1()[pri:0, instance:Automation.soap2Test@baf1bb3]" name="server1" duration-ms="1" started-at="2020-04-20T11:57:34Z" finished-at="2020-04-20T11:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- server1 -->
        <test-method status="PASS" signature="server2()[pri:0, instance:Automation.soap2Test@baf1bb3]" name="server2" duration-ms="0" started-at="2020-04-20T11:57:34Z" finished-at="2020-04-20T11:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- server2 -->
        <test-method status="PASS" signature="server3()[pri:0, instance:Automation.soap2Test@baf1bb3]" name="server3" duration-ms="0" started-at="2020-04-20T11:57:34Z" finished-at="2020-04-20T11:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- server3 -->
        <test-method status="PASS" signature="server4()[pri:0, instance:Automation.soap2Test@baf1bb3]" name="server4" duration-ms="0" started-at="2020-04-20T11:57:34Z" finished-at="2020-04-20T11:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- server4 -->
        <test-method status="PASS" signature="server6()[pri:0, instance:Automation.soap2Test@baf1bb3]" name="server6" duration-ms="1" started-at="2020-04-20T11:57:34Z" finished-at="2020-04-20T11:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- server6 -->
      </class> <!-- Automation.soap2Test -->
      <class name="Automation.AppTest">
        <test-method status="PASS" signature="isNotPlaindromeExceptionTest()[pri:0, instance:Automation.AppTest@7c28c1]" name="isNotPlaindromeExceptionTest" duration-ms="7" started-at="2020-04-20T11:57:34Z" finished-at="2020-04-20T11:57:34Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[input shouldn't be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: input shouldn't be null
at Automation.App.isPalindrome(App.java:12)
at Automation.AppTest.isNotPlaindromeExceptionTest(AppTest.java:25)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNotPlaindromeExceptionTest -->
        <test-method status="PASS" signature="isNotPlaindromeTest()[pri:0, instance:Automation.AppTest@7c28c1]" name="isNotPlaindromeTest" duration-ms="7" started-at="2020-04-20T11:57:34Z" finished-at="2020-04-20T11:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNotPlaindromeTest -->
        <test-method status="PASS" signature="isPlaindromeTest()[pri:0, instance:Automation.AppTest@7c28c1]" name="isPlaindromeTest" duration-ms="0" started-at="2020-04-20T11:57:34Z" finished-at="2020-04-20T11:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPlaindromeTest -->
      </class> <!-- Automation.AppTest -->
      <class name="Automation.NewTest">
        <test-method status="PASS" signature="chrome()[pri:0, instance:Automation.NewTest@588ffeb]" name="chrome" is-config="true" duration-ms="13943" started-at="2020-04-20T11:57:20Z" finished-at="2020-04-20T11:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chrome -->
        <test-method status="PASS" signature="verifyTitle()[pri:0, instance:Automation.NewTest@588ffeb]" name="verifyTitle" duration-ms="21" started-at="2020-04-20T11:57:34Z" finished-at="2020-04-20T11:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="verifygmailtext()[pri:0, instance:Automation.NewTest@588ffeb]" name="verifygmailtext" duration-ms="126" started-at="2020-04-20T11:57:34Z" finished-at="2020-04-20T11:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifygmailtext -->
        <test-method status="PASS" signature="quite()[pri:0, instance:Automation.NewTest@588ffeb]" name="quite" is-config="true" duration-ms="4766" started-at="2020-04-20T11:57:34Z" finished-at="2020-04-20T11:57:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quite -->
      </class> <!-- Automation.NewTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
